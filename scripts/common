#!/bin/bash

# Copyright 2012 Canonical Ltd. All rights reserved.
# Author: Haw Loeung <haw.loeung@canonical.com>

# pgbouncer charm common functions used by various hooks

set -eux # -x for verbose logging to juju debug-log

update_config()
{
	local pgbouncer_config="/etc/pgbouncer/pgbouncer.ini"
	local general_template="templates/pgbouncer.ini.general.tmpl"

	# Export Juju configs and relations.
	local juju_configs=$(/bin/mktemp --suffix=.juju)
	config-get --format=json -o $juju_configs

	# Copy existing config file to preserve permissions.
	cp -a $pgbouncer_config ${pgbouncer_config}.new

	# Generate the "databases" section first from list of Juju relations.
	echo "[databases]" > ${pgbouncer_config}.new
	(find /var/run/juju/ -name 'db-*' -type f -print0 | xargs --null cat) \
		>> ${pgbouncer_config}.new

	# Generate the general "pgbouncer" section with configuration options
	# from Juju's configs.
	scripts/template-generate.py -j $juju_configs $general_template \
		>> ${pgbouncer_config}.new

	# Looks good, let's make it live.
	mv ${pgbouncer_config}.new $pgbouncer_config

	# Clean up
	rm -f $juju_configs
}

update_init_script()
{
	local init_script='/etc/init.d/pgbouncer'

	max_open_files=$(config-get max_open_files)

	# Copy existing init script to preserve permissions.
	cp -a $init_script ${init_script}.new

	found=$(grep -c '^PGBOUNCER_MAXFD=' ${init_script}.new || true)
	if [[ $found -eq 0 ]]; then
		sed "s/^\(OPTS=.*\)/\1\nPGBOUNCER_MAXFD=${max_open_files}/; s/^d_start() {/d_start() {\n\tulimit -n \$PGBOUNCER_MAXFD\n/" $init_script > ${init_script}.new
	else
		sed "s/^PGBOUNCER_MAXFD=[0-9]\+/PGBOUNCER_MAXFD=${max_open_files}/" $init_script > ${init_script}.new
	fi

	# Looks good, let's make it live.
	mv ${init_script}.new $init_script
}
