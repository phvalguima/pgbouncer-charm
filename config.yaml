options:
  extra_packages:
    type: string
    description: >
      Space separated list of extra deb packages to install.
  package_status:
    type: string
    default: install
    description: >
      The status of service-affecting packages will be set to this value
      in the dpkg database. Valid values are "install" and "hold".
  install_sources:
    type: string
    description: >
      List of extra apt sources, per charm-helpers standard format (a yaml
      list of strings encoded as a string). Each source may be either a line
      that can be added directly to sources.list(5), or in the form
      ppa:<user>/<ppa-name> for adding Personal Package Archives, or a
      distribution component to enable.
  install_keys:
    type: string
    description: >
      List of signing keys for install_sources package sources, per
      charmhelpers standard format (a yaml list of strings encoded as a string).
      The keys should be the full ASCII armoured GPG public keys. While GPG key
      ids are also supported and looked up on a keyserver, operators should be
      aware that this mechanism is insecure. null can be used if a standard
      package signing key is used that will already be installed on the machine,
      and for PPA sources where the package signing key is securely retrieved
      from Launchpad..
  nagios_context:
    type: string
    description: >
      Used by the nrpe subordinate charms. A string that will be prepended to
      instance name to set the host name in nagios. So for instance the
      hostname would be something like: juju-myservice-0.
      If you're running multiple environments with the same services in them
      this allows you to differentiate between them.
  nagios_servicegroups:
    type: string
    description: >
      A comma-separated list of nagios servicegroups. If left empty, the
      nagios_context will be used as the servicegroup.
  client_login_timeout:
    default: 60
    type: int
    description: >
      If a client connects but does not manage to login in this
      amount of time, it will be disconnected. Mainly needed to
      avoid dead connections stalling SUSPEND and thus online
      restart. [seconds]
  default_pool_size:
    default: 20
    type: int
    description: >
      How many server connections to allow per user/database
      pair. Can be overridden in the per-database configuration.
  ignore_startup_parameters:
    default: "application_name"
    type: string
    description: >
      By default, PgBouncer allows only parameters it can keep
      track of in startup packets - client_encoding, datestyle,
      timezone and standard_conforming_strings.

      All other parameters will raise an error. To allow other
      parameters, they can be specified here, so that pgbouncer
      knows that they are handled by admin and it can ignore
      them.
  listen_port:
    default: 6432
    type: int
    description: >
      Which port to listen on. Applies to both TCP and Unix sockets.
  max_client_conn:
    default: 100
    type: int
    description: >
      Maximum number of client connections allowed. When
      increased then the file descriptor limits should also be
      increased. Note that actual number of file descriptors
      used is more than max_client_conn.
  pool_mode:
    default: transaction
    type: string
    description: >
      Specifies when a server connection can be reused by other
      clients.
  reserve_pool_size:
    default: 0
    type: int
    description: >
      How many additional connections to allow to a pool. 0
      disables.
  server_check_delay:
    default: 30
    type: int
    description: >
      How long to keep released connections available for
      immediate re-use, without running sanity-check queries on
      it. If 0 then the query is ran always.
  server_connect_timeout:
    default: 15
    type: int
    description: >
        If connection and login wont finish in this amount of
        time, the connection will be closed. [seconds]
  server_idle_timeout:
    default: 600
    type: int
    description: >
      If a server connection has been idle more than this many
      seconds it will be dropped. If 0 then timeout is
      disabled. [seconds]
  server_lifetime:
    default: 3600
    type: int
    description: >
      The pooler will try to close server connections that have
      been connected longer than this. Setting it to 0 means the
      connection is to be used only once, then closed. [seconds]
  server_login_retry:
    default: 15
    type: int
    description: >
      If login failed, because of failure from connect() or
      authentication that pooler waits this much before retrying
      to connect. [seconds]
  wait_warn:
    default: 5
    type: int
    description: >
      The parameters to pass to the nrpe plugin
      check_pgbouncer_pool_waittime for warning level.
  wait_crit:
    default: 20
    type: int
    description: >
      The parameters to pass to the nrpe plugin check_pgbouncer_pool_waittime
      for critical level.
  conn_warn:
    default: 75
    type: int
    description: >
      The parameters to pass to the nrpe plugin
      check_pgbouncer_connection_count for warn level.
  conn_crit:
    default: 90
    type: int
    description: >
      The parameters to pass to the nrpe plugin
      check_pgbouncer_connection_count for critical level.
  auth_user:
    default: test_auth
    type: string
    description: >
      If auth_user is set, then any user not specified in
      auth_file will be queried through the auth_query query from pg_shadow in the database,
      using auth_user.
  auth_query:
    default: SELECT usename, passwd FROM pg_shadow WHERE usename=$1
    type: string
    description: >
      If auth_user is set, then any user not specified in
      auth_file will be queried through the auth_query query from pg_shadow in the database,
      using auth_user.
  reserve_pool_timeout:
    default: !!int "5"
    type: int
    description: |
      If a client has not been serviced in this many seconds, use additional connections from
      the reserve pool. 0 disables.
  client_idle_timeout:
    default: !!int "0"
    type: int
    description: |
      Client connections idling longer than this many seconds are closed. This should be larger
      than the client-side connection lifetime settings, and only used for network problems. [seconds]
  idle_transaction_timeout:
    default: !!int "0"
    type: int
    description: |
      If a client has been in "idle in transaction" state longer, it will be disconnected. [seconds]
  admin_users:
    default: "ubuntu, postgres, root, pgbouncer"
    type: string
    description: |
      Comma-separated list of database users that are allowed to connect and run all commands on the
      console. Ignored when auth_type is any, in which case any user name is allowed in as admin.
  vip:
    type: string
    default:
    description: |
      Virtual IP to use to front pgbouncer units.
  extra_db_config:
    type: string
    description: |
      Comma delimited list of databases configurations that pgbouncer will manage.